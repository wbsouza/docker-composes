# https://hub.docker.com/r/gitlab/gitlab-ce
# https://docs.gitlab.com/omnibus/settings/nginx.html#using-a-non-bundled-web-server

version: '3.6'

networks:
  web:
    external: true
      

volumes:
  gitlab_data:
  gitlab_data_pages:
  gitlab_data_rails_pages:
  gitlab_logs:
  gitlab_postgres:
  gitlab_redis:
  gitlab_runner_conf:


services:

  gitlab:
    image: gitlab/gitlab-ce:${GITLAB_VERSION}
    restart: always
    container_name: gitlab
    hostname: "${GITLAB_HOST}"
    environment:
      - TZ=${TZ}
      - VIRTUAL_HOST=${GITLAB_HOST},${GITLAB_REGISTRY_HOST}
      - VIRTUAL_PORT=80
      # - LETSENCRYPT_HOST=${GITLAB_HOST},${GITLAB_REGISTRY_GITLAB_HOST}
      # - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    ports:
      - ${GITLAB_HOST_IP}:${GITLAB_SSH_PORT}:22
    volumes:
      - './assets/gitlab.rb:/etc/gitlab/gitlab.rb'
      - 'gitlab_logs:/var/log/gitlab'
      - 'gitlab_data:/var/opt/gitlab'
    depends_on:
      - redis
      - postgres
    networks:
      - web
    labels:
      #### gitlab traefik configs
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab-http.rule=Host(`gitlab.${DOMAIN_NAME}`)"
      - "traefik.http.routers.gitlab-http.entrypoints=http"
      - "traefik.http.routers.gitlab-http.service=gitlab"
      - "traefik.http.routers.gitlab-http.middlewares=redirect@file"
      - "traefik.http.routers.gitlab-https.rule=Host(`gitlab.${DOMAIN_NAME}`)"
      - "traefik.http.routers.gitlab-https.entrypoints=https"
      - "traefik.http.routers.gitlab-https.service=gitlab"
      - "traefik.http.routers.gitlab-https.tls.certresolver=omega_httpchallenge"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      #### pages traefik configs
      - "traefik.http.routers.pages-http.rule=Host(`pages.${DOMAIN_NAME}`)"
      - "traefik.http.routers.pages-http.entrypoints=http"
      - "traefik.http.routers.pages-http.service=pages"
      - "traefik.http.routers.pages-http.middlewares=redirect@file"
      - "traefik.http.routers.pages-https.rule=Host(`pages.${DOMAIN_NAME}`)"
      - "traefik.http.routers.pages-https.entrypoints=https"
      - "traefik.http.routers.pages-https.service=pages"
      - "traefik.http.routers.pages-https.tls.certresolver=omega_httpchallenge"
      - "traefik.http.services.pages.loadbalancer.server.port=80"
      #### registry traefik configs
      - "traefik.http.routers.registry-http.rule=Host(`registry.${DOMAIN_NAME}`)"
      - "traefik.http.routers.registry-http.entrypoints=http"
      - "traefik.http.routers.registry-http.service=registry"
      - "traefik.http.routers.registry-http.middlewares=redirect@file"
      - "traefik.http.routers.registry-https.rule=Host(`registry.${DOMAIN_NAME}`)"
      - "traefik.http.routers.registry-https.entrypoints=https"
      - "traefik.http.routers.registry-https.service=registry"
      - "traefik.http.routers.registry-https.tls.certresolver=omega_httpchallenge"
      - "traefik.http.services.registry.loadbalancer.server.port=80"


  pages:
    image: gitlab/gitlab-ce:${GITLAB_VERSION}
    restart: always
    container_name: gitlab_pages
    hostname: "${GITLAB_PAGES_HOST}"
    environment:
      - TZ=${TZ}
      - VIRTUAL_HOST=${GITLAB_PAGES_HOST},*.${GITLAB_PAGES_HOST}
      - VIRTUAL_PORT=8090
      - HTTPS_METHOD=nohttps
      # - LETSENCRYPT_HOST=${GITLAB_PAGES_HOST}
      # - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    expose:
      - 8090/tcp
    entrypoint:
      - /opt/gitlab/embedded/bin/gitlab-pages
    command:
      - -listen-proxy
      - "0.0.0.0:8090"
      - -pages-domain
      - "${GITLAB_PAGES_HOST}"
      - -pages-root
      - "/var/opt/gitlab/gitlab-rails/shared/pages"
    volumes:
      - 'gitlab_data_pages:/var/opt/gitlab/gitlab-pages:rw'
      - 'gitlab_data_rails_pages:/var/opt/gitlab/gitlab-rails/shared/pages:ro'
    networks:
      - web

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    networks:
      - web
    env_file: .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres@adm
      PGDATA: /var/lib/postgresql/data
      SCHEMA: public
    volumes:
      - 'gitlab_postgres:/var/lib/postgresql'
      - '${PWD}/assets/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh'

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    restart: always
    env_file: .env
    networks:
      - web
    command:
      - --loglevel warning
    volumes:
      - 'gitlab_redis:/var/lib/redis'
    restart: always


  gitlab-runner1:
    image: gitlab/gitlab-runner:${GITLAB_RUNNER_VERSION}
    container_name: runner1
    hostname: runner1
    env_file: .env
    networks:
      - web
    depends_on:
      - gitlab
    volumes: 
      - "${PWD}/assets:/assets"
      - "gitlab_runner_conf:/etc/gitlab-runner:Z"
      - "/var/cache:/cache:Z"
      - "/var/run/docker.sock:/var/run/docker.sock"


  gitlab-runner2:
    image: gitlab/gitlab-runner:${GITLAB_RUNNER_VERSION}
    container_name: runner2
    hostname: runner2
    env_file: .env
    networks:
      - web
    depends_on:
      - gitlab
    volumes: 
      - "${PWD}/assets:/assets"
      - "gitlab_runner_conf:/etc/gitlab-runner:Z"
      - "/var/cache:/cache:Z"
      - "/var/run/docker.sock:/var/run/docker.sock"

  gitlab-runner3:
    image: gitlab/gitlab-runner:${GITLAB_RUNNER_VERSION}
    container_name: runner3
    hostname: runner3
    env_file: .env
    networks:
      - web
    depends_on:
      - gitlab
    volumes: 
      - "${PWD}/assets:/assets"
      - "gitlab_runner_conf:/etc/gitlab-runner:Z"
      - "/var/cache:/cache:Z"
      - "/var/run/docker.sock:/var/run/docker.sock"

  gitlab-runner4:
    image: gitlab/gitlab-runner:${GITLAB_RUNNER_VERSION}
    container_name: runner4
    hostname: runner4
    env_file: .env
    networks:
      - web
    depends_on:
      - gitlab
    volumes: 
      - "${PWD}/assets:/assets"
      - "gitlab_runner_conf:/etc/gitlab-runner:Z"
      - "/var/cache:/cache:Z"
      - "/var/run/docker.sock:/var/run/docker.sock"

  gitlab-runner5:
    image: gitlab/gitlab-runner:${GITLAB_RUNNER_VERSION}
    container_name: runner5
    hostname: runner5
    env_file: .env
    networks:
      - web
    depends_on:
      - gitlab
    volumes: 
      - "${PWD}/assets:/assets"
      - "gitlab_runner_conf:/etc/gitlab-runner:Z"
      - "/var/cache:/cache:Z"
      - "/var/run/docker.sock:/var/run/docker.sock"

