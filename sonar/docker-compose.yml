version: "3"
networks:
  web:
    external: true

volumes:
  sonar_conf:
  sonar_data:
  sonar_lib:
  sonar_extensions:
  sonar_postgres:

services:
  sonar_db:
    image: postgres
    container_name: sonar_db
    networks:
      - web
    env_file: .env
    environment:
      - POSTGRES_USER=${SONAR_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${SONAR_DATABASE_PASSWORD}
    volumes:
      - sonar_postgres:/var/lib/postgresql

  sonar:
    image: sonarqube:8.2-community
    container_name: sonar
    networks:
      - web
    depends_on:
      - sonar_db
    env_file: .env
    environment:
      - sonar.jdbc.username=${SONAR_DATABASE_USERNAME}
      - sonar.jdbc.password=${SONAR_DATABASE_PASSWORD}
      - sonar.jdbc.url=jdbc:postgresql://sonar_db:5432/sonar

      # GitLab OAuth Configurations
      - sonar.core.serverBaseURL=https://sonar.${DOMAIN_NAME}
      - sonar.auth.gitlab.enabled=true
      - sonar.auth.gitlab.url=https://gitlab.${DOMAIN_NAME}
      - sonar.auth.gitlab.applicationId=9e73f676a2469cfc0755b2196fbcfa11cf42d65bcd42bfefd30db4538b21d758
      - sonar.auth.gitlab.secret=d3ed97bd1dc10d4be8982aa54916610bbafb67b2a1c661949f16491a8e31cf4f
      - sonar.pullrequest.gitlab.instanceUrl=https://gitlab.${DOMAIN_NAME}
    volumes:
      - sonar_conf:/opt/sonarqube/conf
      - sonar_lib:/opt/sonarqube/lib
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.sonar-http.rule=Host(`sonar.${DOMAIN_NAME}`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.sonar-http.entrypoints=http" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.sonar-http.service=sonar"
      - "traefik.http.routers.sonar-http.middlewares=redirect@file" # <== This is a middleware to redirect to https
      - "traefik.http.routers.sonar-https.rule=Host(`sonar.${DOMAIN_NAME}`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.sonar-https.entrypoints=https" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.sonar-https.service=sonar"
      - "traefik.http.routers.sonar-https.tls.certresolver=omega_httpchallenge" # <== Defining certsresolvers for https
      - "traefik.http.services.sonar.loadbalancer.server.port=9000"

