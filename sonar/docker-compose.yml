version: "2.3"
networks:
  web:
    external: true

volumes:
  sonar_conf:
  sonar_data:
  sonar_lib:
  sonar_extensions:
  sonar_postgres:

services:
  sonar_db:
    image: postgres
    container_name: sonar_db
    networks:
      - web
    env_file: .env
    environment:
      - POSTGRES_USER=${SONAR_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${SONAR_DATABASE_PASSWORD}
    volumes:
      - sonar_postgres:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  sonar:
    image: sonarqube:8.2-community
    container_name: sonar
    networks:
      - web
    depends_on:
      - sonar_db
    env_file: .env
    ports:
      - "9000:9000"
    volumes:
      - "${PWD}/assets/sonar.properties:/opt/sonarqube/conf/sonar.properties"
      - "sonar_conf:/opt/sonarqube/conf"
      - "sonar_lib:/opt/sonarqube/lib"
      - "sonar_data:/opt/sonarqube/data"
      - "sonar_extensions:/opt/sonarqube/extensions"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.sonar-http.rule=Host(`sonar.${DOMAIN_NAME}`)"
      - "traefik.http.routers.sonar-http.entrypoints=http"
      - "traefik.http.routers.sonar-http.service=sonar"
      - "traefik.http.routers.sonar-http.middlewares=redirect@file"
      - "traefik.http.routers.sonar-https.rule=Host(`sonar.${DOMAIN_NAME}`)"
      - "traefik.http.routers.sonar-https.entrypoints=https"
      - "traefik.http.routers.sonar-https.service=sonar"
      - "traefik.http.routers.sonar-https.tls.certresolver=omega_httpchallenge"
      - "traefik.http.services.sonar.loadbalancer.server.port=9000"

